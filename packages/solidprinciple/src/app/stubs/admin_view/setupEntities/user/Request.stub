<?php

namespace App\Http\Requests;

use Illuminate\Foundation\Http\FormRequest;
@if('is_api')
use Illuminate\Contracts\Validation\Validator;
use Illuminate\Http\Exceptions\HttpResponseException;
@endif
class CreateUserRequest extends FormRequest
{
    /**
     * Determine if the user is authorized to make this request.
     *
     * @return bool
     */
    public function authorize()
    {
        return true;
    }

    /**
     * Get the validation rules that apply to the request.
     *
     * @return array
     */
    public function rules()
    {
        return [
            'name'=>'required|string|unique:users,name,'.$this->id,
            'email'=>'required|email|unique:users,email,'.$this->id,
            'role'=>'required|integer',
            'password'=>$this?'nullable':'required'.'|string|min:8',
            'confirm-password'=>$this?'nullable':'required'.'|same:password',
            'status'=>'nullable',
            'image'=>'nullable'
			];
    }

    @if('is_api')
      protected function failedValidation(Validator $validator)
         {
           $errors = $validator->errors();
           $response = response()->json([
               'success'=>false,
               'message' =>  $errors->messages()
               ], 422);

           throw new HttpResponseException($response);
         }
    @endif
}
